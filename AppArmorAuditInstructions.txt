1. Check for AppArmor installation: Verify if AppArmor is installed on your system by running the following command in the terminal:
   
   sudo dpkg -l | grep apparmor
   
   If AppArmor is installed, you will see output related to the package.

2. View AppArmor status: To check the current status of AppArmor, use the following command:
   
   sudo apparmor_status
   
   This will display the active profiles and their associated processes.

3. Enable audit mode: If you suspect AppArmor is causing issues with a specific application, you can enable audit mode to record any violations without enforcing them. To enable audit mode for a specific profile, execute the command:
   
   sudo aa-complain /path/to/profile
   
   Replace `/path/to/profile` with the path of the profile you want to audit.

4. Review audit logs: After enabling audit mode, AppArmor violations will be logged in the system's audit log file. By default, on Ubuntu-based systems, the audit log file is located at `/var/log/audit/audit.log`. To view the log in real-time, you can use the following command:
   
   sudo tail -f /var/log/audit/audit.log
   
   This will display the recent entries in the log file.

##########################################################################################################################

sometimes you may need extra GPU memory when running bots than is allowed by apparmor i have not experienced this with Ubuntu but i have with Debian and Kali 

1. Locate the AppArmor profile related to your terminal or application. The profiles are usually stored in the `/etc/apparmor.d/` directory. Look for a profile that corresponds to your terminal or application.

2. Edit the profile using a text editor, such as `nano` or `vim`. Locate the section related to GPU memory usage or specific resource limitations.

3. Modify the profile to allow a higher GPU memory limit or remove the restriction altogether. Make sure you understand the implications of granting more resources to the application in terms of security and performance.

4. Save the changes to the AppArmor profile and exit the text editor.

5. Reload the AppArmor profiles using the command `sudo apparmor_parser -r /etc/apparmor.d/`.
